@charset "UTF-8";
/*******************************************************
> File Name: layout.scss
> Author: IndexXuan
> Mail: indexxuan@gmail.com
> Created Time: 2015年07月08日 星期三 09时21分34秒
 ******************************************************/
/* vars start */
/* vars end */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
nav,
section,
summary {
  display: block;
}

audio,
canvas,
video {
  display: inline-block;
}

audio:not([controls]) {
  display: none;
  height: 0;
}

[hidden], template {
  display: none;
}

html {
  background: #fff;
  color: #000;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
}

html,
button,
input,
select,
textarea {
  font-family: sans-serif;
}

body {
  margin: 0;
}

a {
  background: transparent;
}
a:focus {
  outline: thin dotted;
}
a:hover, a:active {
  outline: 0;
}

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

h2 {
  font-size: 1.5em;
  margin: 0.83em 0;
}

h3 {
  font-size: 1.17em;
  margin: 1em 0;
}

h4 {
  font-size: 1em;
  margin: 1.33em 0;
}

h5 {
  font-size: 0.83em;
  margin: 1.67em 0;
}

h6 {
  font-size: 0.75em;
  margin: 2.33em 0;
}

abbr[title] {
  border-bottom: 1px dotted;
}

b,
strong {
  font-weight: bold;
}

dfn {
  font-style: italic;
}

mark {
  background: #ff0;
  color: #000;
}

code,
kbd,
pre,
samp {
  font-family: monospace, serif;
  font-size: 1em;
}

pre {
  white-space: pre;
  white-space: pre-wrap;
  word-wrap: break-word;
}

q {
  quotes: "\201C" "\201D" "\2018" "\2019";
}

q:before, q:after {
  content: '';
  content: none;
}

small {
  font-size: 80%;
}

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

img {
  border: 0;
}

svg:not(:root) {
  overflow: hidden;
}

figure {
  margin: 0;
}

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

legend {
  border: 0;
  padding: 0;
  white-space: normal;
}

button,
input,
select,
textarea {
  font-family: inherit;
  font-size: 100%;
  margin: 0;
  vertical-align: baseline;
}

button, input {
  line-height: normal;
}

button,
select {
  text-transform: none;
}

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer;
}

button[disabled],
input[disabled] {
  cursor: default;
}

button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

textarea {
  overflow: auto;
  vertical-align: top;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

input[type="search"] {
  -webkit-appearance: textfield;
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
}
input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
input[type="checkbox"], input[type="radio"] {
  box-sizing: border-box;
  padding: 0;
}

/*******************************************************
    > File Name: common.scss
    > Author: IndexXuan
    > Mail: indexxuan@gmail.com
    > Created Time: 2015年07月13日 星期一 18时38分20秒
 ******************************************************/
/* vars start */
/* vars end */
/* global reset start */
* {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

*:before,
*:after {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

/* for root(html) rem, with different dpr attribute */
@media (min--moz-device-pixel-ratio: 1.5), (-webkit-min-device-pixel-ratio: 1.5), (min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), (min-resolution: 1.5dppx) {
  html[ios="true"] {
    font-size: 200px;
  }
}
@media (min--moz-device-pixel-ratio: 2.5), (-webkit-min-device-pixel-ratio: 2.5), (min-device-pixel-ratio: 2.5), (min-resolution: 240dpi), (min-resolution: 2.5dppx) {
  html[ios="true"] {
    font-size: 300px;
  }
}
img {
  display: block;
  max-width: 100%;
  height: auto;
  vertical-align: middle;
  border: 0;
  page-break-inside: avoid;
}

/* a tag glabal set */
a,
a:active,
a:visited,
a:focus,
a:hover {
  text-decoration: none;
  outline: none;
  color: #747070;
  cursor: pointer;
}

/* global reset end */
/* util start */
#loading-before-app {
  font-size: 18px;
}

/* ================= loading-with-dot ===================== */
.loading-with-dot {
  display: inline-block;
  width: 10px;
  min-height: 2px;
  padding-right: 2px;
  border-left: 2px solid currentColor;
  border-right: 2px solid currentColor;
  background-color: currentColor;
  background-clip: content-box;
  box-sizing: border-box;
  -webkit-animation: dot 4s infinite step-start both;
  animation: dot 4s infinite step-start both;
  *zoom: expression(this.innerHTML = '...');
  /* IE7 */
  /* IE8 */
}
.loading-with-dot:before {
  content: '...';
}
.loading-with-dot::before {
  content: '';
}

:root .loading-with-dot {
  margin-left: 2px;
  padding-left: 2px;
}

/* IE9+ */
@-webkit-keyframes dot {
  25% {
    border-color: transparent;
    background-color: transparent;
  }
  /* zero point */
  50% {
    border-right-color: transparent;
    background-color: transparent;
  }
  /* one point */
  75% {
    border-right-color: transparent;
  }
  /* two points */
}
@keyframes dot {
  25% {
    border-color: transparent;
    background-color: transparent;
  }
  /* zero point */
  50% {
    border-right-color: transparent;
    background-color: transparent;
  }
  /* one point */
  75% {
    border-right-color: transparent;
  }
  /* two points */
}
/* ==================== /. loading-with-dot =========================== */
.area {
  display: inline-block;
  vertical-align: top;
}

/* float */
.fl {
  float: left;
}

.fr {
  float: right;
}

/* 单行文字溢出省略号显示*/
.text-overflow {
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

/* Fixed */
.fixed-top {
  position: fixed;
  top: 0;
  bottom: auto;
  z-index: 99999;
}

.fixed-bottom {
  position: fixed;
  top: auto;
  bottom: 0;
  margin-bottom: 1px;
}

/*  ul */
.unstyled {
  list-style: none;
  padding: 0;
  margin: 0;
}

.hide {
  display: none !important;
}

.show {
  display: block !important;
}

.invisible {
  visibility: hidden;
}

.text-hide, .hide-text {
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}

.hidden {
  display: none !important;
  visibility: hidden !important;
}

/* 块状元素水平居中 */
.block-center {
  margin-left: auto;
  margin-right: auto;
}

/* custom page start */
[ms-controller], .ms-controller, [ms-important], .ms-important {
  visibility: hidden;
}

html, body {
  width: 100%;
  height: 100%;
}

body {
  font-family: "Helvetica Neue", Helvetica, STHeiTi, sans-serif;
  /* 字体优化 */
  text-align: center;
  background-color: #f9f5f5;
  color: #747070;
}

h1, h2, h3, h4, h5, h6, p {
  margin: 0;
  padding: 0;
}

/* -------------------------------------------------------
 *  Spinner
 *-------------------------------------------------------*/
#loader {
  position: absolute;
  width: 100%;
}

#loader p {
  padding-top: 80px;
  margin-left: -.04rem;
}

.spinner {
  margin: 200px auto;
  width: .6rem;
  height: .6rem;
  position: relative;
}

.container1 > div, .container2 > div, .container3 > div {
  width: .14rem;
  height: .14rem;
  background-color: #0088cc;
  border-radius: 100%;
  position: absolute;
  -webkit-animation: bouncedelay 1.2s infinite ease-in-out;
  animation: bouncedelay 1.2s infinite ease-in-out;
  /* Prevent first frame from flickering when animation starts */
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
}

.spinner .spinner-container {
  position: absolute;
  width: 100%;
  height: 100%;
}

.container2 {
  -webkit-transform: rotateZ(45deg);
  transform: rotateZ(45deg);
}

.container3 {
  -webkit-transform: rotateZ(90deg);
  transform: rotateZ(90deg);
}

.circle1 {
  top: 0;
  left: 0;
}

.circle2 {
  top: 0;
  right: 0;
}

.circle3 {
  right: 0;
  bottom: 0;
}

.circle4 {
  left: 0;
  bottom: 0;
}

.container2 .circle1 {
  -webkit-animation-delay: -1.1s;
  animation-delay: -1.1s;
}

.container3 .circle1 {
  -webkit-animation-delay: -1.0s;
  animation-delay: -1.0s;
}

.container1 .circle2 {
  -webkit-animation-delay: -0.9s;
  animation-delay: -0.9s;
}

.container2 .circle2 {
  -webkit-animation-delay: -0.8s;
  animation-delay: -0.8s;
}

.container3 .circle2 {
  -webkit-animation-delay: -0.7s;
  animation-delay: -0.7s;
}

.container1 .circle3 {
  -webkit-animation-delay: -0.6s;
  animation-delay: -0.6s;
}

.container2 .circle3 {
  -webkit-animation-delay: -0.5s;
  animation-delay: -0.5s;
}

.container3 .circle3 {
  -webkit-animation-delay: -0.4s;
  animation-delay: -0.4s;
}

.container1 .circle4 {
  -webkit-animation-delay: -0.3s;
  animation-delay: -0.3s;
}

.container2 .circle4 {
  -webkit-animation-delay: -0.2s;
  animation-delay: -0.2s;
}

.container3 .circle4 {
  -webkit-animation-delay: -0.1s;
  animation-delay: -0.1s;
}

@-webkit-keyframes bouncedelay {
  0%, 80%, 100% {
    -webkit-transform: scale(0);
  }
  40% {
    -webkit-transform: scale(1);
  }
}
@keyframes bouncedelay {
  0%, 80%, 100% {
    transform: scale(0);
    -webkit-transform: scale(0);
  }
  40% {
    transform: scale(1);
    -webkit-transform: scale(1);
  }
}
/**
 * Yo框架全局Variables
 -----------------------
 * Yo基础变量map，如果不想定义某属性，将其value设置为null；
 * Yo仅使用2种长度单位：px用于边框，rem用于除边框之外的所有地方
 *
 * @class variables
 * @module Yo
 */
/**
 * Yo框架全局Variables
 -----------------------
 * Yo基础变量map，如果不想定义某属性，将其value设置为null；
 * Yo仅使用2种长度单位：px用于边框，rem用于除边框之外的所有地方
 *
 * @class variables
 * @module Yo
 */
/**
 * Yo框架全局基础方法
 -----------------------
 * Yo内置了包括响应式方案，CSS3兼容性方案，厂商前缀方案，iconfont方案，flex布局等全局方法
 *
 * @class classes
 * @module Yo
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $property 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 四则运算
 * @method calc
 * @param {String} $property 指定需要进行计算的CSS属性
 * @param {String} $value 与原生CSS语法一致，使用方式如：@include calc(width, 100% - 0.1rem);
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 滤镜
 * @method filter
 * @param {String} $filter 取值与原生语法一致
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义背景图像缩放（Android Browser2.3.*还需要厂商前缀）
 * @method background-size
 * @param {String | Length} $background-size 指定背景图缩放值
 */
/**
 * 定义背景裁减（Android Browser2.3.*还需要厂商前缀）
 * @method background-clip
 * @param {String} $background-clip 指定背景图缩放值
 */
/**
 * 定义背景显示区域（Android Browser2.3.*还需要厂商前缀）
 * @method background-origin
 * @param {String} $background-origin 指定背景图缩放值
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义圆角
 * @method border-radius
 * @param {String} $border-radius 取值与原生语法一致
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * 定义显示类型为伸缩盒
 * @method flexbox
 * @param {String} $flexbox 默认值：flex，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素如何分配空间
 * @method flex
 * @param {String} $flex 默认值：1，取值与最新原生语法一致
 * @param {String} $direction 默认值: row
 */
/**
 * 定义伸缩盒子元素的排版顺序
 * @method order
 * @param {String} $order 默认值：1，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的流动方向
 * @method flex-direction
 * @param {String} $flex-direction 默认值：row，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素溢出排版
 * @method flex-wrap
 * @param {String} $flex-wrap 默认值：nowrap，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的水平对齐方式
 * @method justify-content
 * @param {String} $justify-content 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的垂直对齐方式
 * @method align-items
 * @param {String} $align-items 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素自身的垂直对齐方式
 * @method align-self
 * @param {String} $align-self 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义root root-scroll
 * @method root-scroll
 * @param {String} $root-scroll 指定scroll类型，取值overflow属性的标准值
 */
/**
 * 定义是否有滚动条
 * @method overflow
 * @param {String} $overflow 默认值：auto，取值与最新原生语法一致
 */
/**
 * 生成矩形方法
 * @method rect
 * @param {Length} $width 定义矩形的长度
 * @param {Length} $height 定义矩形的高度
 */
/**
 * 生成正方形方法
 * @method square
 * @param {Length} $size 定义正方形的边长
 */
/**
 * 生成圆形方法
 * @method circle
 * @param {Length} $size 定义圆的半径长度
 * @param {Length} $radius 定义圆的圆角半径长度
 */
/**
 * 生成全屏方法
 * @method fullscreen
 * @param {Integer} $z-index 定义层叠级别
 */
/**
 * 清除浮动方案
 * @method clearfix
 */
/**
 * 链接处理方法
 * @method link
 * @param {Color} $color 定义链接颜色
 */
/**
 * 强制换行方案
 * @method wrap
 */
/**
 * 单行文本溢出显示方案
 * @method ellipsis
 * @param {Boolen} $ellipsis 定义是否需要省略号
 */
/**
 * 文字隐藏方案
 * @method texthide
 */
/**
 * 清除间隙方案-容器
 * @method killspace
 */
/**
 * 清除间隙方案-子级
 * @method killspace-item
 */
/**
 * 未知尺寸元素垂直居中解决方案-容器
 * @method valign
 */
/**
 * 未知尺寸元素垂直居中解决方案-子级
 * @method valign-item
 */
/**
 * 已经尺寸元素垂直居中解决方案
 * @method alignment
 * @param {Length} $width 居中元素的宽度
 * @param {Length} $height 居中元素的高度
 */
/**
 * Yo框架全局Reset
 -----------------------
 * Yo重置Mobile及高级浏览器上常见的差异
 *
 * @class reset
 * @module Yo
 */
*,
::before,
::after {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  -webkit-tap-highlight-color: transparent;
}

html {
  background-color: #f9f9f9;
  color: #212121;
  font-size: 100px;
  -webkit-user-select: none;
  user-select: none;
}

body {
  margin: 0;
  font-size: 14px;
  line-height: 1.5;
  font-family: Helvetica Neue, Helvetica, STHeiTi, sans-serif;
}

ul,
ol,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
figure,
form,
fieldset,
legend,
input,
textarea,
button,
p,
blockquote,
th,
td,
pre,
xmp {
  margin: 0;
  padding: 0;
}

input,
textarea,
button,
select,
pre,
xmp,
tt,
code,
kbd,
samp {
  line-height: inherit;
  font-family: inherit;
}

h1,
h2,
h3,
h4,
h5,
h6,
small,
big,
input,
textarea,
button,
select {
  font-size: inherit;
}

address,
cite,
dfn,
em,
i,
optgroup,
var {
  font-style: normal;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
  table-layout: fixed;
  text-align: left;
}

ul,
ol,
menu {
  list-style: none;
}

fieldset,
img {
  border: 0;
  vertical-align: middle;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  display: block;
}

audio,
canvas,
video {
  display: inline-block;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: "\0020";
}

textarea,
pre,
xmp {
  overflow: auto;
  -webkit-overflow-scrolling: touch;
}

textarea {
  resize: vertical;
}

input,
textarea,
button,
select
a {
  outline: 0 none;
}

input,
textarea,
button,
select {
  color: inherit;
}
input:disabled,
textarea:disabled,
button:disabled,
select:disabled {
  opacity: 1;
}

button::-moz-focus-inner,
input::-moz-focus-inner {
  padding: 0;
  border: 0;
}

input[type="button"],
input[type="submit"],
input[type="reset"],
input[type="file"]::-webkit-file-upload-button {
  -webkit-appearance: none;
  appearance: none;
}

mark {
  background-color: transparent;
}

a,
ins,
s,
u,
del {
  text-decoration: none;
}

a,
img {
  -webkit-touch-callout: none;
}

a {
  color: #00afc7;
}

.g-clear::after,
.g-mod::after {
  display: block;
  overflow: hidden;
  clear: both;
  height: 0;
  content: "\0020";
}

@font-face {
  font-family: yofont;
  src: url("http://source.qunar.com/fonts/yo/1.0.0/yofont.woff") format("woff"), url("http://source.qunar.com/fonts/yo/1.0.0/yofont.ttf") format("truetype");
}
.yo-ico {
  font-family: yofont !important;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  vertical-align: middle;
}

/**
 * Yo框架全局基础方法
 -----------------------
 * Yo内置了包括响应式方案，CSS3兼容性方案，厂商前缀方案，iconfont方案，flex布局等全局方法
 *
 * @class classes
 * @module Yo
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $property 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 四则运算
 * @method calc
 * @param {String} $property 指定需要进行计算的CSS属性
 * @param {String} $value 与原生CSS语法一致，使用方式如：@include calc(width, 100% - 0.1rem);
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 滤镜
 * @method filter
 * @param {String} $filter 取值与原生语法一致
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义背景图像缩放（Android Browser2.3.*还需要厂商前缀）
 * @method background-size
 * @param {String | Length} $background-size 指定背景图缩放值
 */
/**
 * 定义背景裁减（Android Browser2.3.*还需要厂商前缀）
 * @method background-clip
 * @param {String} $background-clip 指定背景图缩放值
 */
/**
 * 定义背景显示区域（Android Browser2.3.*还需要厂商前缀）
 * @method background-origin
 * @param {String} $background-origin 指定背景图缩放值
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义圆角
 * @method border-radius
 * @param {String} $border-radius 取值与原生语法一致
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * 定义显示类型为伸缩盒
 * @method flexbox
 * @param {String} $flexbox 默认值：flex，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素如何分配空间
 * @method flex
 * @param {String} $flex 默认值：1，取值与最新原生语法一致
 * @param {String} $direction 默认值: row
 */
/**
 * 定义伸缩盒子元素的排版顺序
 * @method order
 * @param {String} $order 默认值：1，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的流动方向
 * @method flex-direction
 * @param {String} $flex-direction 默认值：row，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素溢出排版
 * @method flex-wrap
 * @param {String} $flex-wrap 默认值：nowrap，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的水平对齐方式
 * @method justify-content
 * @param {String} $justify-content 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的垂直对齐方式
 * @method align-items
 * @param {String} $align-items 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素自身的垂直对齐方式
 * @method align-self
 * @param {String} $align-self 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义root root-scroll
 * @method root-scroll
 * @param {String} $root-scroll 指定scroll类型，取值overflow属性的标准值
 */
/**
 * 定义是否有滚动条
 * @method overflow
 * @param {String} $overflow 默认值：auto，取值与最新原生语法一致
 */
/**
 * 生成矩形方法
 * @method rect
 * @param {Length} $width 定义矩形的长度
 * @param {Length} $height 定义矩形的高度
 */
/**
 * 生成正方形方法
 * @method square
 * @param {Length} $size 定义正方形的边长
 */
/**
 * 生成圆形方法
 * @method circle
 * @param {Length} $size 定义圆的半径长度
 * @param {Length} $radius 定义圆的圆角半径长度
 */
/**
 * 生成全屏方法
 * @method fullscreen
 * @param {Integer} $z-index 定义层叠级别
 */
/**
 * 清除浮动方案
 * @method clearfix
 */
/**
 * 链接处理方法
 * @method link
 * @param {Color} $color 定义链接颜色
 */
/**
 * 强制换行方案
 * @method wrap
 */
/**
 * 单行文本溢出显示方案
 * @method ellipsis
 * @param {Boolen} $ellipsis 定义是否需要省略号
 */
/**
 * 文字隐藏方案
 * @method texthide
 */
/**
 * 清除间隙方案-容器
 * @method killspace
 */
/**
 * 清除间隙方案-子级
 * @method killspace-item
 */
/**
 * 未知尺寸元素垂直居中解决方案-容器
 * @method valign
 */
/**
 * 未知尺寸元素垂直居中解决方案-子级
 * @method valign-item
 */
/**
 * 已经尺寸元素垂直居中解决方案
 * @method alignment
 * @param {Length} $width 居中元素的宽度
 * @param {Length} $height 居中元素的高度
 */
/**
 * Yo框架全局Variables
 -----------------------
 * Yo基础变量map，如果不想定义某属性，将其value设置为null；
 * Yo仅使用2种长度单位：px用于边框，rem用于除边框之外的所有地方
 *
 * @class variables
 * @module Yo
 */
/**
 * Yo框架全局基础方法
 -----------------------
 * Yo内置了包括响应式方案，CSS3兼容性方案，厂商前缀方案，iconfont方案，flex布局等全局方法
 *
 * @class classes
 * @module Yo
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $property 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 四则运算
 * @method calc
 * @param {String} $property 指定需要进行计算的CSS属性
 * @param {String} $value 与原生CSS语法一致，使用方式如：@include calc(width, 100% - 0.1rem);
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与原生语法一致
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 滤镜
 * @method filter
 * @param {String} $filter 取值与原生语法一致
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义背景图像缩放（Android Browser2.3.*还需要厂商前缀）
 * @method background-size
 * @param {String | Length} $background-size 指定背景图缩放值
 */
/**
 * 定义背景裁减（Android Browser2.3.*还需要厂商前缀）
 * @method background-clip
 * @param {String} $background-clip 指定背景图缩放值
 */
/**
 * 定义背景显示区域（Android Browser2.3.*还需要厂商前缀）
 * @method background-origin
 * @param {String} $background-origin 指定背景图缩放值
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义圆角
 * @method border-radius
 * @param {String} $border-radius 取值与原生语法一致
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * 定义显示类型为伸缩盒
 * @method flexbox
 * @param {String} $flexbox 默认值：flex，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素如何分配空间
 * @method flex
 * @param {String} $flex 默认值：1，取值与最新原生语法一致
 * @param {String} $direction 默认值: row
 */
/**
 * 定义伸缩盒子元素的排版顺序
 * @method order
 * @param {String} $order 默认值：1，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的流动方向
 * @method flex-direction
 * @param {String} $flex-direction 默认值：row，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素溢出排版
 * @method flex-wrap
 * @param {String} $flex-wrap 默认值：nowrap，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的水平对齐方式
 * @method justify-content
 * @param {String} $justify-content 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的垂直对齐方式
 * @method align-items
 * @param {String} $align-items 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素自身的垂直对齐方式
 * @method align-self
 * @param {String} $align-self 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义root root-scroll
 * @method root-scroll
 * @param {String} $root-scroll 指定scroll类型，取值overflow属性的标准值
 */
/**
 * 定义是否有滚动条
 * @method overflow
 * @param {String} $overflow 默认值：auto，取值与最新原生语法一致
 */
/**
 * 生成矩形方法
 * @method rect
 * @param {Length} $width 定义矩形的长度
 * @param {Length} $height 定义矩形的高度
 */
/**
 * 生成正方形方法
 * @method square
 * @param {Length} $size 定义正方形的边长
 */
/**
 * 生成圆形方法
 * @method circle
 * @param {Length} $size 定义圆的半径长度
 * @param {Length} $radius 定义圆的圆角半径长度
 */
/**
 * 生成全屏方法
 * @method fullscreen
 * @param {Integer} $z-index 定义层叠级别
 */
/**
 * 清除浮动方案
 * @method clearfix
 */
/**
 * 链接处理方法
 * @method link
 * @param {Color} $color 定义链接颜色
 */
/**
 * 强制换行方案
 * @method wrap
 */
/**
 * 单行文本溢出显示方案
 * @method ellipsis
 * @param {Boolen} $ellipsis 定义是否需要省略号
 */
/**
 * 文字隐藏方案
 * @method texthide
 */
/**
 * 清除间隙方案-容器
 * @method killspace
 */
/**
 * 清除间隙方案-子级
 * @method killspace-item
 */
/**
 * 未知尺寸元素垂直居中解决方案-容器
 * @method valign
 */
/**
 * 未知尺寸元素垂直居中解决方案-子级
 * @method valign-item
 */
/**
 * 已经尺寸元素垂直居中解决方案
 * @method alignment
 * @param {Length} $width 居中元素的宽度
 * @param {Length} $height 居中元素的高度
 */
/**
 * Yo框架fragment基础构造
 -----------------------
 * Yo内置了包括：dialog, popup, tip, tab, switch, rating等基础组件
 *
 * @class fragment
 * @module Yo
 */
/**
 * @class fragment
 */
/**
 * 构造头的自定义使用方法
 -----------------------
 * 使用方法，详见 [Demo](http://doyoe.github.io/Yo/demo/fragment/yo-header.html)
 * @method yo-header
 * @param {String} $name 定义yo-header名称
 * @param {Length} $height 定义yo-header高度
 * @param {Length} $item-width 定义yo-header两侧子项宽度
 * @param {Length} $item-space 定义yo-header两侧子项离边界的间隙
 * @param {Color} $bordercolor 定义yo-header边框色
 * @param {Color} $bgcolor 定义yo-header背景色
 * @param {Color} $color 定义yo-header文本色
 * @param {Length} $font-size 定义yo-header文本大小
 * @param {Color} $item-color 定义yo-header两侧的子项文本色
 * @param {Color} $item-ico-color 定义yo-header两侧的ico色
 * @param {Length} $item-font-size 定义yo-header两侧的子项文本大小
 * @param {Length} $item-ico-size 定义yo-header两侧的ico大小
 */
.yo-header {
  position: relative;
  height: 0.44rem;
  line-height: 0.44rem;
  border-bottom: 1px solid #1ba9ba;
  background-color: #1ba9ba;
  color: #fff;
  font-size: 0.18rem;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  text-align: center;
}
.yo-header > .title {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  margin: 0 0.6rem;
}
.yo-header > .regret,
.yo-header > .affirm {
  position: absolute;
  top: 0;
  width: 0.6rem;
  cursor: pointer;
  font-size: 0.14rem;
}
.yo-header > .regret:active,
.yo-header > .affirm:active {
  opacity: .5;
}
.yo-header > .regret.yo-ico,
.yo-header > .regret > .yo-ico,
.yo-header > .affirm.yo-ico,
.yo-header > .affirm > .yo-ico {
  color: #7ff;
  font-size: 0.2rem;
}
.yo-header > .regret {
  left: 0;
  padding-left: 0.15rem;
  text-align: left;
}
.yo-header > .affirm {
  right: 0;
  padding-right: 0.15rem;
  text-align: right;
}

.site {
  min-height: 450px;
  /* for layout, footer is footer */
}
.site, .site-footer {
  font-size: .14rem;
}

/* slider start */
#slider {
  font-size: 14px;
}

.ui-slider {
  width: 100%;
  overflow: hidden;
  position: relative;
  -webkit-user-select: none;
  -webkit-touch-callout: none;
  -webkit-tap-highlight-color: transparent;
}

.ui-slider-group {
  overflow: hidden;
  position: relative;
  white-space: nowrap;
  /*内容不换行*/
  -webkit-transform: translateZ(0);
}

.ui-slider-item {
  background-color: #e3e3e3;
  text-align: center;
  position: relative;
  float: left;
  overflow: hidden;
  -webkit-box-sizing: border-box;
}

.ui-slider-item {
  height: 148px;
}

.ui-slider-item img {
  background: #E7E7E7 url(ui-slider-imgbg.png) center center no-repeat;
}

.ui-slider-item > a {
  display: block;
  text-decoration: none;
  /*由于slide-item有3d属性，导致android上最后一个overflow:hidden无效，所以给子集也加个overflow:hidden;*/
  width: 100%;
  overflow: hidden;
}

.ui-slider-item > p {
  display: none;
  /* no need 20150708 */
  position: absolute;
  bottom: 0;
  width: 100%;
  text-align: left;
  pointer-events: none;
  overflow: hidden;
  word-break: break-all;
  white-space: nowrap;
  text-overflow: ellipsis;
  color: #fff;
  background: rgba(0, 0, 0, 0.5);
  padding: 6px 0;
  text-indent: 10px;
}

.ui-slider-dots {
  /*position: absolute;*/
  /*bottom: 6px;*/
  /*right: 0;*/
  position: relative;
  top: -25rem;
  padding: 0 6px;
  /*text-align: right;*/
}

.ui-slider-dots > b {
  /* dots to bar, 20150708 */
  display: inline-block;
  margin: 0 4px;
  width: 15px;
  height: 3px;
  /*border-radius: 3px;*/
  background: rgba(144, 144, 144, 0.8);
}

.ui-slider-dots .ui-state-active {
  background: #fff;
}

.ui-slider-pre, .ui-slider-next {
  position: absolute;
  z-index: 99;
  width: 50px;
  height: 60px;
  top: 50%;
  left: 0;
  margin-top: -30px;
  outline: none;
}

.ui-slider-next {
  right: 0;
  left: auto;
}

.ui-slider-pre:after, .ui-slider-next:after {
  position: absolute;
  width: 20px;
  height: 40px;
  background: rgba(0, 0, 0, 0.3) url(ui-slider-arrow.png) no-repeat;
  background-size: 35px 15px;
  outline: none;
  content: '\0020';
  display: inline-block;
  background-position: 3px center;
  left: 0;
  top: 50%;
  margin-top: -20px;
  border-radius: 0 20px 20px 0;
}

.ui-slider-next:after {
  background-position: -18px center;
  right: 0;
  left: auto;
  border-radius: 20px 0 0 20px;
}

/*css for pad*/
@media all and (min-device-width: 768px) and (max-device-width: 1024px) {
  .ui-slider-item > p {
    font-size: 16px;
    padding: .5em 0;
    text-indent: .8em;
  }

  .ui-slider-dots {
    bottom: .5em;
    padding-right: .5em;
  }

  .ui-slider-dots b {
    margin-right: .5em;
    width: .5em;
    height: .5em;
    border-radius: .25em;
  }
}
/* slider end */
a, a:hover {
  text-decoration: none;
  color: #747070;
  cursor: pointer;
}

/* common item start */
.item-wrapper {
  padding: .05px 0;
}
.item-wrapper .item {
  width: 49%;
  /*height: $img_height + 45rem;*/
  padding: .06rem 0;
  margin-bottom: .3rem;
}
.item-wrapper .item-img {
  width: 100%;
  height: 0.8rem;
  border: 1px solid #eee;
  vertical-align: middle;
  border: 0;
  -ms-interpolation-mode: bicubic;
}
.item-wrapper .item-title {
  margin-top: .03rem;
  max-height: 0.45rem;
  min-height: .52rem;
  font-size: .14rem;
  word-break: break-all;
  color: #747070;
}

/* common item end */
/* util end */
/* categories start */
.categories {
  font-size: .14rem;
  /* normalize the fs*/
  text-align: left;
  width: 97%;
  margin-left: auto;
  margin-right: auto;
  overflow: hidden;
}
.categories .title-line {
  width: 99%;
  height: 0.36rem;
}
.categories .title-line h2.col-title {
  width: 18%;
  height: 100%;
  line-height: 0.36rem;
  font-size: .16rem;
  border-bottom: 2px solid #6ad086;
}
.categories .title-line .more {
  float: right;
  width: 13%;
  height: 100%;
  line-height: 0.36rem;
  font-size: .12rem;
  color: #6ad086;
  padding-top: .03rem;
}
.categories .title-line .more:hover {
  /*text-decoration: none;*/
}
.categories .line {
  width: 100%;
  height: .01rem;
  background-color: #ddd;
}

/* categories end */
/* list start, just small modify for list */
.list .item-wrapper, .topN .item-wrapper {
  padding: .10rem .08rem;
}
.list .item, .topN .item {
  width: 100%;
  text-align: left;
  border-top: 1px solid #ddd;
  border-bottom: 1px solid #ddd;
}
.list .item-img, .topN .item-img {
  width: 35%;
  margin-right: .05rem;
}
.list .item-title, .topN .item-title {
  width: 55%;
  margin-top: .01rem;
}

/* list end */
/* custom page end */
.detail {
  font-size: .18rem;
  color: #1c1c1c;
  text-indent: 2em;
  line-height: 1.5;
  padding: .1rem;
}
.detail .title {
  font-size: .20rem;
  line-height: 3;
}
.detail .content {
  line-height: 1.6;
  text-align: left;
}

/* -------------------------------------------------------
 *  Spinner
 *-------------------------------------------------------*/
#loader {
  position: absolute;
  width: 100%;
}

#loader p {
  padding-top: 80px;
  margin-left: -4px;
}

.spinner {
  margin: 200px auto;
  width: 60px;
  height: 60px;
  position: relative;
}

.container1 > div, .container2 > div, .container3 > div {
  width: 14px;
  height: 14px;
  background-color: #0088cc;
  border-radius: 100%;
  position: absolute;
  -webkit-animation: bouncedelay 1.2s infinite ease-in-out;
  animation: bouncedelay 1.2s infinite ease-in-out;
  /* Prevent first frame from flickering when animation starts */
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
}

.spinner .spinner-container {
  position: absolute;
  width: 100%;
  height: 100%;
}

.container2 {
  -webkit-transform: rotateZ(45deg);
  transform: rotateZ(45deg);
}

.container3 {
  -webkit-transform: rotateZ(90deg);
  transform: rotateZ(90deg);
}

.circle1 {
  top: 0;
  left: 0;
}

.circle2 {
  top: 0;
  right: 0;
}

.circle3 {
  right: 0;
  bottom: 0;
}

.circle4 {
  left: 0;
  bottom: 0;
}

.container2 .circle1 {
  -webkit-animation-delay: -1.1s;
  animation-delay: -1.1s;
}

.container3 .circle1 {
  -webkit-animation-delay: -1.0s;
  animation-delay: -1.0s;
}

.container1 .circle2 {
  -webkit-animation-delay: -0.9s;
  animation-delay: -0.9s;
}

.container2 .circle2 {
  -webkit-animation-delay: -0.8s;
  animation-delay: -0.8s;
}

.container3 .circle2 {
  -webkit-animation-delay: -0.7s;
  animation-delay: -0.7s;
}

.container1 .circle3 {
  -webkit-animation-delay: -0.6s;
  animation-delay: -0.6s;
}

.container2 .circle3 {
  -webkit-animation-delay: -0.5s;
  animation-delay: -0.5s;
}

.container3 .circle3 {
  -webkit-animation-delay: -0.4s;
  animation-delay: -0.4s;
}

.container1 .circle4 {
  -webkit-animation-delay: -0.3s;
  animation-delay: -0.3s;
}

.container2 .circle4 {
  -webkit-animation-delay: -0.2s;
  animation-delay: -0.2s;
}

.container3 .circle4 {
  -webkit-animation-delay: -0.1s;
  animation-delay: -0.1s;
}

@-webkit-keyframes bouncedelay {
  0%, 80%, 100% {
    -webkit-transform: scale(0);
  }
  40% {
    -webkit-transform: scale(1);
  }
}
@keyframes bouncedelay {
  0%, 80%, 100% {
    transform: scale(0);
    -webkit-transform: scale(0);
  }
  40% {
    transform: scale(1);
    -webkit-transform: scale(1);
  }
}

/*# sourceMappingURL=layout.css.map */
